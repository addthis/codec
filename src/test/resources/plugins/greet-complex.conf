addthis.codec.plugins.defaults {
  _strict: true
}

# defaults
com.addthis.codec.plugins {
  SimpleGreet {
    suffix: "! What a pleasant default suffix we are having!"
  }
  CrowdGreet {
    # uses both autocollection and nested defaults
    crowd { simple.suffix: "! Where are all my friends?" }
  }
  ListGreet {
    # uses both autocollection and nested defaults
    crowd { simple.suffix: "! Where are all my friends?" }
  }
  ParseGreet {
    bytes: "2k", millis: "1 second", other: {simple.suffix: " from other"}
  }
  ParseGreetSub {
    extra: "extra!", bytes: "1k",
  }
}

plugins {
  greet {
    _class: "com.addthis.codec.plugins.Greeter"
    _array {
      _class: crowd,
      _primary: crowd
    }
    _default {
      _class: simple,
      suffix: "! What a pleasant default-alias suffix we are having!"
    }
    easy: "com.addthis.codec.plugins.EasyGreet"
    simple: "com.addthis.codec.plugins.SimpleGreet"
    multi {
      _class: MultiGreet
    }
    multi-simple-primary {
      _class: multi
      _primary: suffix
      _inline: true
      prefix: "Hello World"
      message: ""
    }
    multi-array-primary {
      _class: multi
      _primary: parts
      _inline: true
      prefix: "listing parts"
      message: ": "
      suffix: ""
    }
    crowd: "com.addthis.codec.plugins.CrowdGreet"
    list: "com.addthis.codec.plugins.ListGreet"
    parse: "com.addthis.codec.plugins.ParseGreet"
    subparse: "com.addthis.codec.plugins.ParseGreetSub"
    parse-simple {
      _class: subparse
      _primary: "other.simple.suffix"
    }
    enum: "com.addthis.codec.plugins.EnumGreet"
    simpler-string {
      _class: simple
      _primary: suffix
    }
    simpler {
      _class: simple
      suffix: " even simpler"
    }
    simplerer {
      _class: simpler
    }
  }
}

